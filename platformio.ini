; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
  default_envs = emulator
  extra_configs = config.ini

; ===================================================================================================
; Base Configuration
; ===================================================================================================
[env]
build_flags =
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D BUILD_TIMESTAMP=$UNIX_TIME

lib_deps =
	lvgl/lvgl@^8.3.9

extra_scripts =
  ./extra_scripts/update_album_art.py
  ./extra_scripts/websocket_serial.py

; ===================================================================================================
;
; Configuration for ESP32 Terminal from Elecrow
; https://www.elecrow.com/wiki/index.php?title=ESP_Terminal_with_3.5inch_RGB_Capacitive_Touch_Display
;
; ===================================================================================================
[env:esp32terminal]
extends = env
platform = espressif32
board = esp32-s3-devkitc-1          # https://docs.platformio.org/en/stable/boards/espressif32/esp32-s3-devkitc-1.html
framework = arduino

monitor_filters = esp32_exception_decoder

; Overrides from the standard ESP32-S3 Devkit board definition
board_build.arduino.memory_type = qio_opi
board_build.f_flash = 80000000L
board_build.flash_mode = qio
board_upload.flash_size = 16MB
board_build.filesystem = littlefs

lib_deps =
	${env.lib_deps}
	lovyan03/LovyanGFX@^1.1.7
	olikraus/U8g2@^2.35.3
  bblanchon/ArduinoJson@^6.21.3                                 ; https://arduinojson.org/
  ottowinter/ESPAsyncWebServer-esphome@^3.0.0                   ; https://github.com/me-no-dev/ESPAsyncWebServer
  knolleary/PubSubClient@^2.8                                   ; https://pubsubclient.knolleary.net/
  muwerk/ustd @ ^0.7.4                                          ; https://github.com/muwerk/ustd

build_src_filter =
  +<*>
  -<.git/>
  -<.svn/>
  -<**/emulator/*> ; Don't include the SDL Emulator HAL implementation

build_flags =
	${env.build_flags}
	-D BOARD_HAS_PSRAM
  -D MDNS_NAME='"${wifi.mdns_name}"'
  -D OTA_PASSWORD='"${ota.password}"'
  -D MQTT_HOST='"${mqtt.host}"'
  -D MQTT_USER='"${mqtt.user}"'
  -D MQTT_PASS='"${mqtt.password}"'
  -Isrc/arduino/ESP32Terminal

monitor_speed=115200

; ===================================================================================================
;
; Configuration for ESP32 Terminal from Elecrow - with OTA updates
; https://www.elecrow.com/wiki/index.php?title=ESP_Terminal_with_3.5inch_RGB_Capacitive_Touch_Display
;
; ===================================================================================================
[env:esp32terminal_ota]
  extends = env:esp32terminal

  upload_protocol = espota
  upload_port = '${wifi.mdns_name}.local'
  upload_flags =
    --auth='${ota.password}'
    --host_port=55999

; ===================================================================================================
; SDL-based LVGL application emulator
; ===================================================================================================
[env:emulator]
extends = env
platform = native

lib_deps =
	${env.lib_deps}
  lvgl/lv_drivers@^8.3.0

build_src_filter =
  +<*>
  +<../.pio/libdeps/emulator/lv_drivers/sdl/**/*> ; Include the SDL driver for lvgl
  -<.git/>
  -<.svn/>
  -<**/arduino/*> ; Don't include the Arduino code

build_flags =
  ${env.build_flags}
  -Og -g -Wl,-Map,${platformio.build_dir}/${this.__env__}/debug.map

  ; SDL options
  -lSDL2
  -D USE_SDL
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  -D LV_DRV_NO_CONF
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=320
  -D SDL_ZOOM=2
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

  -I.pio/libdeps/emulator/lv_drivers/sdl
  -Isrc/emulator/SDLEmulator

[env:test_inmemory_fs]
extends = env
platform = native
debug_test=test_inmemory_fs

lib_deps =
	${env.lib_deps}

build_flags =
  ${env.build_flags}
  -Isrc/emulator/SDLEmulator
